version: '3.8'

services:
  sdk:
    build:
      context: .
      target: builder
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3000
      - SOLANA_NETWORK=devnet
    command: npm run start:dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 3s
      retries: 3
    networks:
      - nexar-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - nexar-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - nexar-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    networks:
      - nexar-network

  solana:
    image: solanalabs/solana:latest
    ports:
      - "8899:8899"
      - "8900:8900"
    command: solana-test-validator
    networks:
      - nexar-network

  jupyter:
    build:
      context: .
      dockerfile: Dockerfile.jupyter
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/notebooks
      - ./data:/data
    environment:
      - JUPYTER_TOKEN=nexar
    networks:
      - nexar-network

volumes:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  nexar-network:
    driver: bridge 
